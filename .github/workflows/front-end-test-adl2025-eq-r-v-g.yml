# Nombre del workflow
name: Pruebas E2E con cucumber-Gherkin y Playwright

# Condiciones del Workflow
on: 
    push:
         branches: [ githubActions ]  
# Trabajo a ejecutar
jobs:
    ejecute-cucumber-playwright:
        name: Ejecutar pruebas Cucumber con Playwright
        runs-on: ubuntu-latest
        timeout-minutes: 30

        strategy:
            fail-fast: false
            matrix:
                # Un solo navegador para que sea más rápido
                browser: [chromium]

        steps: 
            # Traer el código a la máquina virtual (market Place) 
            - name: Bajar el código
              uses: actions/checkout@v4
            
            - name: Instalar Node.js
              uses: actions/setup-node@v4    
              with:
                node-version: ${{ env.NODE_VERSION }}
                cahe: 'npm'
            
            - name: Instale las dependencias
              run: npm ci
            
            - name: Instale los browser para playwright solo chromium
              run: npx playwright install --with-deps chromium

            # Crear directorio para reportes
            - name: Crear una carpeta para reportes donde se agrupen todos 
              run: |
                mkdir -p allure-results
                mkdir -p reports/videos
                mkdir -p reports/screenshots

            - name: Ejecuta Cucumber
              run: npx cucumber-js

              env:
              # Variables específicas para Playwright (basadas en tu worldParameters)
                PLAYWRIGHT_BROWSER: ${{ matrix.browser }}
                HEADLESS: true
                CI: true
          # Tu URL base desde cucumber.js
                BASE_URL: https://test-adl.leonardojose.dev
            - name: Generar reporte Allure
              if: always()
              run: |
                if ! command -v allure &> /dev/null; then
                  echo "Instalando Allure..."
                  curl -o allure-2.24.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
                  tar -zxf allure-2.24.0.tgz
                  sudo mv allure-2.24.0 /opt/allure
                  sudo ln -s /opt/allure/bin/allure /usr/bin/allure
                fi
                allure generate allure-results --clean -o allure-report
            - name: Subir reportes Allure
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: allure-report-${{ matrix.browser }}
                path: |
                  allure-report/
                  allure-results/
                retention-days: 7
            - name: Subir artefactos de prueba (videos, screenshots)
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: test-artifacts-${{ matrix.browser }}
                path: |
                  reports/
                  test-results/
                retention-days: 7
            - name: Mostrar resumen de resultados
              if: always()
              run: |
                echo "=== RESUMEN DE EJECUCIÓN ==="
                echo "Reportes generados en: allure-report/"
                echo "Videos guardados en: reports/videos/"
                echo "Screenshots en: reports/screenshots/"
                if [ -d "allure-results" ]; then
                  echo "Archivos de resultados Allure:"
                  ls -la allure-results/
                fi
